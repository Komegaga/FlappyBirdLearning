{
  "name": "FlappyBirdLearning",
  "tagline": "利用Q Learning自我學習flappy bird遊戲",
  "body": "### Flappy Bird Learning\r\n\r\n此為利用機器學習的方式自動學習flappy bird的專案，而學習方法則是用Q Learning\r\n\r\n\r\n### Game Framework\r\n利用Phaser.js製作出flappy bird遊戲，如下圖\r\n\r\n(參考至 http://www.lessmilk.com/tutorial/flappy-bird-phaser-1)\r\n![](http://i.imgur.com/txWQzas.png)\r\n\r\n### Q Learning\r\n![](http://i.imgur.com/eaO31P2.png)\r\n\r\n重點在於這一個公式\r\n\r\n而一開始利用這個公式訓練時碰到了一些困難\r\n\r\n![](http://i.imgur.com/Mu5oNb3.png)\r\n\r\n當只使用這兩個狀態空間時，也就是QState是一個二維的空間\r\n\r\n造成在低點的障礙物無法得知離地面或是離天空的距離而常常超出邊界\r\n\r\n所以我加上了一個狀態空間，為到天空的距離\r\n\r\n![](http://i.imgur.com/8RofM8h.png)\r\n\r\n但這又引發了別的問題，當我一般的速度通過磚塊時，理論上會以這個方式行動\r\n![](http://i.imgur.com/Iq53cW3.png)\r\n\r\n紅點的位置會慢慢訓練成不按的情況下Q Value會比按的情況下高\r\n\r\n但在這個情況時\r\n![](http://i.imgur.com/YVnAD7j.png)\r\n由於下降的速度太快，導致於Q Value訓練成必須要按下之後才能避免撞到磚塊\r\n\r\n也因為這兩個狀態沒辦法收斂到正確的位置，而收斂到了其他的位置\r\n\r\n所以我們必須再加一個狀態空間為速度這個空間\r\n\r\n\r\n基本上這樣就可以完成練習了\r\n\r\n\r\n\r\n\r\n\r\n### Authors and Contributors\r\n@gcaa31928\r\n\r\n### Support or Contact\r\n有任何意見可以開issues或是pull request\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}